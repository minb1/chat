# Generated by Django 5.1.6 on 2025-04-16 18:58

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('logius', '0001_initial'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='feedback',
            options={'ordering': ['-created_at']},
        ),
        migrations.CreateModel(
            name='ChatQuery',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('chat_id', models.CharField(db_index=True, help_text='Session ID for grouping queries', max_length=36)),
                ('user_query', models.TextField(help_text='Original user query')),
                ('llm_response', models.TextField(blank=True, help_text='Response from the LLM', null=True)),
                ('doc_tag', models.TextField(blank=True, help_text='Standard title for the query context', null=True)),
                ('file_paths', models.JSONField(default=list, help_text='List of file_path strings for retrieved document chunks')),
                ('model_used', models.CharField(blank=True, help_text='The LLM model used', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['chat_id'], name='idx_chatquery_chat_id'), models.Index(fields=['doc_tag'], name='idx_chatquery_doc_tag'), models.Index(fields=['created_at'], name='idx_chatquery_created_at')],
            },
        ),
        migrations.AlterField(
            model_name='feedback',
            name='query',
            field=models.ForeignKey(help_text='The query this feedback is for', on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks', to='logius.chatquery'),
        ),
        migrations.DeleteModel(
            name='QueryDocument',
        ),
        migrations.DeleteModel(
            name='Query',
        ),
    ]
